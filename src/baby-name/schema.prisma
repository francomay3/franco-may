// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("BABY_NAME_DB_URL")
}

model User {
  id String @id
  name String
  avatar String
  email String
  subtitle String
  createdAt DateTime @default(now())

  // Relations
  polls Poll[] // User's owned polls
  participatedPolls UserPoll[] // Polls user participates in
  friendsTo Friendship[] @relation("UserToFriend")
  friendsFrom Friendship[] @relation("FriendToUser")
}
 
model Poll {
  id Int @id @default(autoincrement())
  title String
  ownerId String
  avatar String
  open Boolean @default(true)
  createdAt DateTime @default(now())

  // Relations
  owner User @relation(fields: [ownerId], references: [id])
  participants UserPoll[]
}

model UserPoll {
  userId String
  pollId Int

  // Relations
  user User @relation(fields: [userId], references: [id])
  poll Poll @relation(fields: [pollId], references: [id])

  // Composite primary key
  @@id([userId, pollId])
}

model Friendship {
  userId String
  friendId String
  createdAt DateTime @default(now())

  // Relations
  user User @relation("UserToFriend", fields: [userId], references: [id])
  friend User @relation("FriendToUser", fields: [friendId], references: [id])

  // Composite primary key
  @@id([userId, friendId])
}